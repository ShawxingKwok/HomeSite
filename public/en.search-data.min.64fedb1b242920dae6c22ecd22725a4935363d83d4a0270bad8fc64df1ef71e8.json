[{"id":0,"href":"/ITWorks/docs/ktutil/","title":"Kt Util","section":"Docs","content":" Setup # implementation \u0026#34;io.github.shawxingkwok:kt-util:1.0.0\u0026#34; Document # "},{"id":1,"href":"/ITWorks/docs/androidutil/","title":"Android Util","section":"Docs","content":" Effect # Your browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! Setup # implementation \u0026#34;io.github.shawxingkwok:android-util:1.0.0\u0026#34; Document # "},{"id":2,"href":"/ITWorks/docs/androidutilview/","title":"Android Util-view","section":"Docs","content":" Effect # Your browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! Setup # Add this part directly, rather than insert messily. Groovy //region shawxingkwok: android-util-view android.lintOptions.disable \u0026#39;NonConstantResourceId\u0026#39; tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach{ kotlinOptions.freeCompilerArgs += \u0026#34;-Xcontext-receivers\u0026#34; } dependencies { implementation \u0026#39;io.github.shawxingkwok:kt-util:1.0.0\u0026#39; implementation \u0026#39;io.github.shawxingkwok:android-util-view:1.0.0\u0026#39; } //endregion Kotlin //region shawxingkwok: android-util-view android.lintOptions.disable(\u0026#34;NonConstantResourceId\u0026#34;) tasks.withType\u0026lt;org.jetbrains.kotlin.gradle.tasks.KotlinCompile\u0026gt;().configureEach { kotlinOptions.freeCompilerArgs += \u0026#34;-Xcontext-receivers\u0026#34; } dependencies { implementation(\u0026#34;io.github.shawxingkwok:kt-util:1.0.0\u0026#34;) implementation(\u0026#34;io.github.shawxingkwok:android-util-view:1.0.0\u0026#34;) } //endregion Document # "},{"id":3,"href":"/ITWorks/docs/kdatastore/","title":"KDataStore","section":"Docs","content":"中文版本\nAn extended data store with little configuration, easy encryption and extensive supported types.\nBasic feature preview # view Your browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! compose Your browser doesn't support embedded videos, but don't worry, you can download it and watch it with your favorite video player! Actual performance contrast # TODO\nSetup # Get a sample or configure as below.\nview groovy //region KDataStore android.lintOptions.disable \u0026#39;NonConstantResourceId\u0026#39; tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach{ kotlinOptions.freeCompilerArgs += \u0026#39;-Xcontext-receivers\u0026#39; } dependencies { implementation \u0026#39;io.github.shawxingkwok:kt-util:1.0.0\u0026#39; implementation \u0026#39;io.github.shawxingkwok:android-util-view:1.0.0\u0026#39; implementation \u0026#39;io.github.shawxingkwok:android-kdatastore:1.0.0\u0026#39; } //endregion kotlin //region KDataStore android.lintOptions.disable (\u0026#34;NonConstantResourceId\u0026#34;) tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach{ kotlinOptions.freeCompilerArgs += \u0026#34;-Xcontext-receivers\u0026#34; } dependencies { implementation (\u0026#34;io.github.shawxingkwok:kt-util:1.0.0\u0026#34;) implementation (\u0026#34;io.github.shawxingkwok:android-util-view:1.0.0\u0026#34;) implementation (\u0026#34;io.github.shawxingkwok:android-kdatastore:1.0.0\u0026#34;) } //endregion compose groovy //region KDataStore android.lintOptions.disable \u0026#39;NonConstantResourceId\u0026#39; tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach{ kotlinOptions.freeCompilerArgs += \u0026#39;-Xcontext-receivers\u0026#39; } dependencies { implementation \u0026#39;io.github.shawxingkwok:kt-util:1.0.0\u0026#39; implementation \u0026#39;io.github.shawxingkwok:android-kdatastore-compose:1.0.0\u0026#39; } //endregion kotlin //region KDataStore android.lintOptions.disable (\u0026#34;NonConstantResourceId\u0026#34;) tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach{ kotlinOptions.freeCompilerArgs += \u0026#34;-Xcontext-receivers\u0026#34; } dependencies { implementation (\u0026#34;io.github.shawxingkwok:kt-util:1.0.0\u0026#34;) implementation (\u0026#34;io.github.shawxingkwok:android-kdatastore-compose:1.0.0\u0026#34;) } //endregion Core Usage # Configure # Update # // async Settings.isDarkMode.toss(true) Settings.isDarkMode.toss{ !it } // suspend Settings.isDarkMode.emit(true) Settings.isDarkMode.emit{ !it } That type Flow is declared inside class KDataStore and extends from the official Flow, being both collectable and mutable.\nCollect # view I suggest my collectOnResume if in Fragment.\nclass MainFragment : Fragment(){ override fun onViewCreated(view: View, savedInstanceState: Bundle?) { super.onViewCreated(view, savedInstanceState) Settings.isDarkMode.collectOnResume{ switch.isChecked = it } } } compose I suggest my flow state extension.\nuse Kotlin serialization # Usage # It\u0026rsquo;s an official platform-neutral data conversion, and directly savable in my KDataStore.\nimport kotlinx.serialization.Serializable import pers.shawxingkwok.kdatastore.KDataStore @Serializable data class Data(val a: Int, val b: String) object MDataStore: KDataStore(){ val data by ktSerializable(Data(1, \u0026#34;\u0026#34;)) } Config # Groovy plugins{ id \u0026#39;org.jetbrains.kotlin.plugin.serialization\u0026#39; version \u0026#34;$kt_version\u0026#34; } dependencies { implementation \u0026#39;org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0\u0026#39; } Kotlin plugins{ id (\u0026#34;org.jetbrains.kotlin.plugin.serialization\u0026#34;) version (\u0026#34;$kt_version\u0026#34;) } dependencies { implementation (\u0026#34;org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0\u0026#34;) } Migration # Side action # Encryption # This encryption part references https://github.com/MFlisar/MaterialPreferences. Details # Custom scope # TODO(handlerScope, ioScope)\nReset # "},{"id":4,"href":"/ITWorks/%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/","title":"中文版本","section":"","content":" KReadStore # An extended data store with little configuration, easy encryption and extensive supported types. 一个\n"}]